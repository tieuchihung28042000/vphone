const mongoose = require('mongoose');
const Branch = require('./models/Branch');

const branches = [
  { name: 'Dƒ© An' },
  { name: 'Qu·∫≠n 9' }
];

async function seedBranches() {
  try {
    // K·∫øt n·ªëi MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/vphone', {
      useNewUrlParser: true,
      useUnifiedTopology: true
    });

    console.log('‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng');

    // Ki·ªÉm tra v√† t·∫°o chi nh√°nh n·∫øu ch∆∞a c√≥
    for (const branchData of branches) {
      const existingBranch = await Branch.findOne({ name: branchData.name });
      
      if (!existingBranch) {
        const branch = new Branch(branchData);
        await branch.save();
        console.log(`‚úÖ ƒê√£ t·∫°o chi nh√°nh: ${branchData.name}`);
      } else {
        console.log(`‚ÑπÔ∏è  Chi nh√°nh ƒë√£ t·ªìn t·∫°i: ${branchData.name}`);
      }
    }

    console.log('üéâ Ho√†n th√†nh seed chi nh√°nh!');
    
  } catch (error) {
    console.error('‚ùå L·ªói seed chi nh√°nh:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üì™ ƒê√≥ng k·∫øt n·ªëi MongoDB');
  }
}

// Ch·∫°y script
seedBranches(); 