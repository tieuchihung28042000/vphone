services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: vphone-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-@654321}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-vphone}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - vphone-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 384M
        reservations:
          memory: 256M

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vphone-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 4000
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-@654321}@mongodb:27017/${MONGO_DB_NAME:-vphone}?authSource=admin
      JWT_SECRET: "VPhone2025!ProductionJWT#NguyenKieuAnh$SecureKey"
      EMAIL_USER: vphone24h3@gmail.com
      EMAIL_PASS: ftxhkismjvdqzawp
    ports:
      - "4000:4000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - vphone-network
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 384M
        reservations:
          memory: 256M

  # Frontend React App
  frontend:
    build:
      context: ./iphone-inventory
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://${DOMAIN:-localhost}
    container_name: vphone-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
    ports:
      - "3000:80"
    networks:
      - vphone-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
        reservations:
          memory: 64M

  # Nginx Reverse Proxy (HTTP only)
  nginx:
    image: nginx:alpine
    container_name: vphone-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - nginx_logs:/var/log/nginx
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - vphone-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
        reservations:
          memory: 32M

# Named volumes (Docker không hỗ trợ size limit trực tiếp)
# Giới hạn storage sẽ được thực hiện thông qua filesystem
volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backend_logs:
    driver: local
  nginx_logs:
    driver: local

# Network for inter-service communication
networks:
  vphone-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 