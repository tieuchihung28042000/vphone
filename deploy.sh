#!/usr/bin/env bash
set -euo pipefail

ROOT_DIR="/home/chihung2k/sites/nguyenkieuanh.com"
cd "$ROOT_DIR"

if [ ! -f .env ]; then
  echo "‚ùå Thi·∫øu file .env ·ªü $ROOT_DIR/.env" >&2
  exit 1
fi

# Parse env file an to√†n (kh√¥ng eval, tr√°nh ${...} expansion)
parse_env() {
  local key="$1"
  awk -F'=' -v k="$key" 'BEGIN{IGNORECASE=0} $0 !~ /^\s*#/ {gsub(/\r/,""); if ($1==k) {sub(/^\s*/,"",$2); sub(/\s*$/ ,"",$2); print $2; exit}}' .env
}

echo "üöÄ Build & start containers"
docker compose up -d --build

echo "‚è≥ Ch·ªù MongoDB healthy..."
for i in {1..30}; do
  if docker inspect -f '{{.State.Health.Status}}' vphone-mongodb 2>/dev/null | grep -q healthy; then
    echo "‚úÖ MongoDB healthy"
    break
  fi
  sleep 2
  if [ "$i" -eq 30 ]; then
    echo "‚ùå MongoDB ch∆∞a healthy sau 60s" >&2
    exit 1
  fi
done

echo "‚è≥ Ch·ªù Backend healthy..."
for i in {1..30}; do
  if docker inspect -f '{{.State.Health.Status}}' vphone-backend 2>/dev/null | grep -q healthy; then
    echo "‚úÖ Backend healthy"
    break
  fi
  sleep 2
  if [ "$i" -eq 30 ]; then
    echo "‚ùå Backend ch∆∞a healthy sau 60s" >&2
    exit 1
  fi
done

# Seed admin user n·∫øu ch∆∞a c√≥
DB_NAME="$(parse_env MONGO_DB_NAME)"
DB_NAME="${DB_NAME:-vphone_production}"
MONGO_USER="$(parse_env MONGO_ROOT_USERNAME)"
MONGO_USER="${MONGO_USER:-admin}"
MONGO_PASS="$(parse_env MONGO_ROOT_PASSWORD)"
MONGO_PASS="${MONGO_PASS:-@654321}"

echo "üîé Ki·ªÉm tra user trong MongoDB ($DB_NAME.users)"
COUNT=$(docker exec -i vphone-mongodb mongosh --quiet -u "$MONGO_USER" -p "$MONGO_PASS" --authenticationDatabase admin --eval "db.getSiblingDB(\"$DB_NAME\").users.countDocuments()" || echo 0)
COUNT=${COUNT:-0}
echo "üìä users.countDocuments() = $COUNT"

if [ "$COUNT" -eq 0 ]; then
  echo "üß© Seed admin m·∫∑c ƒë·ªãnh (admin@vphone.vn / 123456)"
  HASH=$(docker exec -i vphone-backend node -e "console.log(require('bcrypt').hashSync('123456',10))")
  docker exec -i vphone-mongodb mongosh --quiet -u "$MONGO_USER" -p "$MONGO_PASS" --authenticationDatabase admin --eval "
    const db = db.getSiblingDB(\"$DB_NAME\");
    db.users.insertOne({
      email: 'admin@vphone.vn',
      username: 'admin',
      password: '$HASH',
      role: 'admin',
      approved: true,
      createdAt: new Date(),
      updatedAt: new Date()
    });
    print('‚úÖ ƒê√£ t·∫°o admin m·∫∑c ƒë·ªãnh.');
  "
else
  echo "‚úÖ DB ƒë√£ c√≥ user, b·ªè qua b∆∞·ªõc seed."
fi

BACKEND_PORT_VAL="$(parse_env BACKEND_PORT)"
BACKEND_PORT_VAL="${BACKEND_PORT_VAL:-4000}"
echo "üîç Ki·ªÉm tra health endpoint backend"
curl -sS http://localhost:${BACKEND_PORT_VAL}/api/health || true

echo "üéâ Ho√†n t·∫•t deploy"


