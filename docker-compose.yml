services:
  # MongoDB (official image)
  mongodb:
    image: mongo:6
    container_name: vphone-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - ./data/mongodb:/data/db
      - ./data/mongodb_config:/data/configdb
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 20s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: vphone-backend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
      PORT: ${BACKEND_PORT}
      # Compose-internal Mongo URI using service hostname "mongodb"
      # NOTE: Nếu mật khẩu có ký tự đặc biệt (ví dụ @), dùng bản URL-encoded
      # Ưu tiên biến MONGO_ROOT_PASSWORD_URLENCODED nếu có, fallback về MONGO_ROOT_PASSWORD
      MONGODB_URI: mongodb://vphone-mongodb:27017/${MONGO_DB_NAME}
      JWT_SECRET: ${JWT_SECRET}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    # Do not expose backend; reachable internally via nginx proxy
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          memory: 256M

  # Frontend React App (served by its own container)
  frontend:
    build:
      context: ./iphone-inventory
      dockerfile: Dockerfile
      args:
        VITE_API_URL: ""
    container_name: vphone-frontend
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      NODE_ENV: production
    # Do not expose frontend directly; served via nginx proxy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          memory: 128M

  # Nginx reverse proxy to serve frontend and proxy /api to backend internally
  nginx:
    image: nginx:alpine
    container_name: vphone-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "${FRONTEND_PORT}:3000"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://127.0.0.1:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# Named volumes for data persistence
volumes:
  backend_logs:
    driver: local