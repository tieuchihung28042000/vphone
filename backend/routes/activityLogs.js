import express from 'express';
const router = express.Router();
import ActivityLog from '../models/ActivityLog.js';
import { authenticateToken, requireRole } from '../middleware/auth.js';

// Helper functions
function formatCurrency(amount) {
  if (!amount || amount === 0) return '0ƒë';
  return new Intl.NumberFormat('vi-VN').format(amount) + 'ƒë';
}

function getRoleLabel(role) {
  const roleMap = {
    admin: 'Admin',
    thu_ngan: 'Thu ng√¢n',
    nhan_vien_ban_hang: 'Nh√¢n vi√™n b√°n h√†ng',
    user: 'User'
  };
  return roleMap[role] || role;
}

// Helper: t·∫°o m√¥ t·∫£ chi ti·∫øt cho l·ªãch s·ª≠ ho·∫°t ƒë·ªông theo chu·∫©n nghi·ªáp v·ª•
function createDetailedDescription(item) {
  const payload = item.payload_snapshot || {};
  const username = item.username || 'H·ªá th·ªëng';
  const role = getRoleLabel(item.role);
  
  // Debug log ƒë·ªÉ ki·ªÉm tra
  console.log('üîç Creating description for:', { module: item.module, action: item.action, payload });
  
  switch (item.module) {
    case 'nhap_hang':
      if (item.action === 'create') {
        const receiptCode = payload.receipt_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o phi·∫øu nh·∫≠p h√†ng #${receiptCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - Gi√° nh·∫≠p: ${formatCurrency(payload.price_import || 0)}${payload.supplier ? ` - Nh√† cung c·∫•p: ${payload.supplier}` : ''} - S·ªë l∆∞·ª£ng: ${payload.quantity || 1}`;
      }
      if (item.action === 'update') {
        const receiptCode = payload.receipt_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t phi·∫øu nh·∫≠p h√†ng #${receiptCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi phi·∫øu nh·∫≠p h√†ng`;
      
    case 'xuat_hang':
      if (item.action === 'create') {
        const orderCode = payload.order_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o ƒë∆°n b√°n h√†ng #${orderCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - Gi√° b√°n: ${formatCurrency(payload.price_sell || 0)}${payload.customer_name ? ` - Kh√°ch h√†ng: ${payload.customer_name}` : ''} - S·ªë l∆∞·ª£ng: ${payload.quantity || 1}`;
      }
      if (item.action === 'update') {
        const orderCode = payload.order_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t ƒë∆°n b√°n h√†ng #${orderCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi ƒë∆°n b√°n h√†ng`;
      
    case 'return_export':
      if (item.action === 'create') {
        const returnCode = payload.return_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o phi·∫øu tr·∫£ h√†ng b√°n #${returnCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë ti·ªÅn ho√†n: ${formatCurrency(payload.return_amount || 0)}${payload.customer_name ? ` - Kh√°ch h√†ng: ${payload.customer_name}` : ''} - L√Ω do: ${payload.reason || 'Kh√¥ng r√µ'}`;
      }
      if (item.action === 'delete') {
        const returnCode = payload.return_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) h·ªßy phi·∫øu tr·∫£ h√†ng b√°n #${returnCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi phi·∫øu tr·∫£ h√†ng b√°n`;
      
    case 'return_import':
      if (item.action === 'create') {
        const returnCode = payload.return_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o phi·∫øu tr·∫£ h√†ng nh·∫≠p #${returnCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë ti·ªÅn ho√†n: ${formatCurrency(payload.return_amount || 0)}${payload.supplier ? ` - Nh√† cung c·∫•p: ${payload.supplier}` : ''} - L√Ω do: ${payload.reason || 'Kh√¥ng r√µ'}`;
      }
      if (item.action === 'delete') {
        const returnCode = payload.return_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) h·ªßy phi·∫øu tr·∫£ h√†ng nh·∫≠p #${returnCode} - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi phi·∫øu tr·∫£ h√†ng nh·∫≠p`;
      
    case 'cashbook':
      if (item.action === 'create') {
        const receiptCode = payload.receipt_code || payload.ref_id || 'N/A';
        const typeLabel = payload.type === 'thu' ? 'phi·∫øu thu' : 'phi·∫øu chi';
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o ${typeLabel} #${receiptCode} - N·ªôi dung: ${payload.content || 'N/A'} - S·ªë ti·ªÅn: ${formatCurrency(payload.amount || 0)}${payload.customer ? ` - Kh√°ch h√†ng: ${payload.customer}` : ''}${payload.supplier ? ` - Nh√† cung c·∫•p: ${payload.supplier}` : ''} - S·ªë d∆∞ sau: ${formatCurrency(payload.balance_after || 0)}`;
      }
      if (item.action === 'update') {
        const receiptCode = payload.receipt_code || payload.ref_id || 'N/A';
        if (payload.before && payload.after) {
          const before = payload.before;
          const after = payload.after;
          return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t phi·∫øu #${receiptCode} - N·ªôi dung: ${after.content || 'N/A'} - S·ªë ti·ªÅn t·ª´ ${formatCurrency(before.amount || 0)} th√†nh ${formatCurrency(after.amount || 0)}${after.customer ? ` - Kh√°ch h√†ng: ${after.customer}` : ''}${after.supplier ? ` - Nh√† cung c·∫•p: ${after.supplier}` : ''}`;
        }
        // X·ª≠ l√Ω d·ªØ li·ªáu c≈© - c√≥ th·ªÉ payload ch·ª©a to√†n b·ªô object
        if (payload.content || payload.amount) {
          return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t phi·∫øu s·ªï qu·ªπ #${receiptCode} - N·ªôi dung: ${payload.content || 'N/A'} - S·ªë ti·ªÅn: ${formatCurrency(payload.amount || 0)}${payload.customer ? ` - Kh√°ch h√†ng: ${payload.customer}` : ''}${payload.supplier ? ` - Nh√† cung c·∫•p: ${payload.supplier}` : ''}`;
        }
        // Fallback cho d·ªØ li·ªáu c≈© kh√¥ng c√≥ th√¥ng tin chi ti·∫øt
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t phi·∫øu s·ªï qu·ªπ #${receiptCode} - Th√¥ng tin chi ti·∫øt kh√¥ng kh·∫£ d·ª•ng`;
      }
      if (item.action === 'delete') {
        const receiptCode = payload.receipt_code || payload.ref_id || 'N/A';
        return `Nh√¢n vi√™n ${username} (${role}) x√≥a phi·∫øu s·ªï qu·ªπ #${receiptCode} - N·ªôi dung: ${payload.content || 'N/A'} - S·ªë ti·ªÅn: ${formatCurrency(payload.amount || 0)}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi s·ªï qu·ªπ`;
      
    case 'user':
      if (item.action === 'create') {
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o t√†i kho·∫£n m·ªõi - Email: ${payload.email || 'N/A'} - Vai tr√≤: ${getRoleLabel(payload.role)}${payload.full_name ? ` - H·ªç t√™n: ${payload.full_name}` : ''}${payload.branch_name ? ` - Chi nh√°nh: ${payload.branch_name}` : ''}`;
      }
      if (item.action === 'update') {
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t th√¥ng tin t√†i kho·∫£n - Email: ${payload.email || 'N/A'}${payload.full_name ? ` - H·ªç t√™n: ${payload.full_name}` : ''}`;
      }
      if (item.action === 'delete') {
        return `Nh√¢n vi√™n ${username} (${role}) x√≥a t√†i kho·∫£n - Email: ${payload.email || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi t√†i kho·∫£n ng∆∞·ªùi d√πng`;
      
    case 'inventory':
      if (item.action === 'create') {
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o s·∫£n ph·∫©m m·ªõi - T√™n: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë l∆∞·ª£ng: ${payload.quantity || 0} - Gi√° nh·∫≠p: ${formatCurrency(payload.price_import || 0)}${payload.supplier ? ` - Nh√† cung c·∫•p: ${payload.supplier}` : ''}`;
      }
      if (item.action === 'update') {
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t s·∫£n ph·∫©m - T√™n: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë l∆∞·ª£ng: ${payload.quantity || 0} - Tr·∫°ng th√°i: ${payload.status === 'in_stock' ? 'C√≤n h√†ng' : 'H·∫øt h√†ng'}`;
      }
      if (item.action === 'delete') {
        return `Nh√¢n vi√™n ${username} (${role}) x√≥a s·∫£n ph·∫©m - T√™n: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë l∆∞·ª£ng: ${payload.quantity || 0}`;
      }
      if (item.action === 'adjust') {
        return `Nh√¢n vi√™n ${username} (${role}) ƒëi·ªÅu ch·ªânh t·ªìn kho - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - S·ªë l∆∞·ª£ng t·ª´ ${payload.old_quantity || 0} th√†nh ${payload.new_quantity || 0} - L√Ω do: ${payload.reason || 'Kh√¥ng r√µ'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi s·∫£n ph·∫©m - T√™n: ${payload.product_name || 'N/A'}`;
      
    case 'cong_no':
      if (item.action === 'create') {
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o c√¥ng n·ª£ - ${payload.customer_name || payload.supplier || 'ƒê·ªëi t√°c'}: ${formatCurrency(payload.amount || 0)} - Lo·∫°i: ${payload.type === 'customer' ? 'C√¥ng n·ª£ kh√°ch h√†ng' : 'C√¥ng n·ª£ nh√† cung c·∫•p'}`;
      }
      if (item.action === 'update') {
        if (payload.paid_amount) {
          return `Nh√¢n vi√™n ${username} (${role}) thu n·ª£ kh√°ch h√†ng - Kh√°ch h√†ng: ${payload.customer_name || 'N/A'}${payload.customer_phone ? ` (${payload.customer_phone})` : ''} - S·ªë ti·ªÅn thu: ${formatCurrency(payload.paid_amount)} - N·ª£ c√≤n l·∫°i: ${formatCurrency(payload.remaining_debt || 0)}`;
        }
        if (payload.added_amount) {
          return `Nh√¢n vi√™n ${username} (${role}) c·ªông n·ª£ kh√°ch h√†ng - Kh√°ch h√†ng: ${payload.customer_name || 'N/A'} - S·ªë ti·ªÅn c·ªông: ${formatCurrency(payload.added_amount)}`;
        }
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t c√¥ng n·ª£ - ${payload.customer_name || payload.supplier || 'ƒê·ªëi t√°c'}: ${formatCurrency(payload.amount || 0)}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi c√¥ng n·ª£`;
      
    case 'supplier_debt':
      if (item.action === 'create') {
        return `H·ªá th·ªëng c·ªông n·ª£ nh√† cung c·∫•p - Nh√† cung c·∫•p: ${payload.supplier_name || 'N/A'}${payload.supplier_phone ? ` (${payload.supplier_phone})` : ''} - S·ªë ti·ªÅn: ${formatCurrency(payload.amount || 0)} - Chi nh√°nh: ${payload.branch || 'N/A'}${payload.note ? ` - Ghi ch√∫: ${payload.note}` : ''}`;
      }
      if (item.action === 'update') {
        if (payload.paid_amount) {
          return `H·ªá th·ªëng tr·∫£ n·ª£ nh√† cung c·∫•p - Nh√† cung c·∫•p: ${payload.supplier_name || 'N/A'}${payload.supplier_phone ? ` (${payload.supplier_phone})` : ''} - S·ªë ti·ªÅn tr·∫£: ${formatCurrency(payload.paid_amount)} - N·ª£ c√≤n l·∫°i: ${formatCurrency(payload.remaining_debt || 0)} - Chi nh√°nh: ${payload.branch || 'N/A'}${payload.note ? ` - Ghi ch√∫: ${payload.note}` : ''}`;
        }
        return `H·ªá th·ªëng c·∫≠p nh·∫≠t c√¥ng n·ª£ nh√† cung c·∫•p - Nh√† cung c·∫•p: ${payload.supplier_name || 'N/A'}`;
      }
      return `H·ªá th·ªëng thao t√°c v·ªõi c√¥ng n·ª£ nh√† cung c·∫•p`;
      
    case 'xuat_hang':
      if (item.action === 'create') {
        if (payload.export_type === 'accessory') {
          return `Nh√¢n vi√™n ${username} (${role}) t·∫°o ƒë∆°n xu·∫•t h√†ng ph·ª• ki·ªán - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'} (SKU: ${payload.sku || 'N/A'}) - S·ªë l∆∞·ª£ng: ${payload.quantity || 0} - Gi√° b√°n: ${formatCurrency(payload.price_sell || 0)}${payload.customer_name ? ` - Kh√°ch h√†ng: ${payload.customer_name}` : ''}${payload.customer_phone ? ` (${payload.customer_phone})` : ''} - ƒê√£ thanh to√°n: ${formatCurrency(payload.total_paid || 0)}`;
        } else {
          return `Nh√¢n vi√™n ${username} (${role}) t·∫°o ƒë∆°n xu·∫•t h√†ng - S·∫£n ph·∫©m: ${payload.product_name || 'N/A'}${payload.imei ? ` (IMEI: ${payload.imei})` : ''} - Gi√° b√°n: ${formatCurrency(payload.price_sell || 0)}${payload.customer_name ? ` - Kh√°ch h√†ng: ${payload.customer_name}` : ''}${payload.customer_phone ? ` (${payload.customer_phone})` : ''} - ƒê√£ thanh to√°n: ${formatCurrency(payload.total_paid || 0)}`;
        }
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi ƒë∆°n xu·∫•t h√†ng`;
      
    case 'category':
      if (item.action === 'create') {
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o danh m·ª•c m·ªõi - T√™n: ${payload.name || 'N/A'} - M√¥ t·∫£: ${payload.description || 'Kh√¥ng c√≥'}`;
      }
      if (item.action === 'update') {
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t danh m·ª•c - T√™n: ${payload.name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi danh m·ª•c`;
      
    case 'branch':
      if (item.action === 'create') {
        return `Nh√¢n vi√™n ${username} (${role}) t·∫°o chi nh√°nh m·ªõi - T√™n: ${payload.name || 'N/A'} - ƒê·ªãa ch·ªâ: ${payload.address || 'Kh√¥ng c√≥'}`;
      }
      if (item.action === 'update') {
        return `Nh√¢n vi√™n ${username} (${role}) c·∫≠p nh·∫≠t th√¥ng tin chi nh√°nh - T√™n: ${payload.name || 'N/A'}`;
      }
      return `Nh√¢n vi√™n ${username} (${role}) thao t√°c v·ªõi chi nh√°nh`;
      
    default:
      // Fallback: t·∫°o m√¥ t·∫£ t·ª´ module v√† action
      const moduleMap = {
        'nhap_hang': 'phi·∫øu nh·∫≠p h√†ng',
        'xuat_hang': 'ƒë∆°n b√°n h√†ng', 
        'return_export': 'phi·∫øu tr·∫£ h√†ng b√°n',
        'return_import': 'phi·∫øu tr·∫£ h√†ng nh·∫≠p',
        'cashbook': 's·ªï qu·ªπ',
        'user': 't√†i kho·∫£n ng∆∞·ªùi d√πng',
        'inventory': 't·ªìn kho',
        'cong_no': 'c√¥ng n·ª£',
        'category': 'danh m·ª•c',
        'branch': 'chi nh√°nh'
      };
      
      const actionMap = {
        'create': 't·∫°o',
        'update': 'c·∫≠p nh·∫≠t',
        'delete': 'x√≥a',
        'return': 'tr·∫£',
        'sale': 'b√°n',
        'purchase': 'nh·∫≠p',
        'adjust': 'ƒëi·ªÅu ch·ªânh',
        'other': 'thao t√°c'
      };
      
      const moduleVi = moduleMap[item.module] || item.module;
      const actionVi = actionMap[item.action] || item.action;
      
      return `Nh√¢n vi√™n ${username} (${role}) ${actionVi} ${moduleVi}`;
  }
}

// Ch·ªâ admin v√† qu·∫£n l√Ω ƒë∆∞·ª£c xem log
router.get('/', authenticateToken, requireRole(['admin','thu_ngan']), async (req, res) => {
  try {
    const { from, to, user, module, branch, page = 1, limit = 50 } = req.query;
    const query = {};

    if (from || to) {
      query.createdAt = {};
      if (from) query.createdAt.$gte = new Date(from);
      if (to) query.createdAt.$lte = new Date(new Date(to).setDate(new Date(to).getDate() + 1));
    }
    if (user) query.username = new RegExp(user, 'i');
    if (module && module !== 'all') query.module = module;
    if (branch && branch !== 'all') query.branch = branch;

    // Qu·∫£n l√Ω ch·ªâ xem log trong chi nh√°nh c·ªßa m√¨nh
    if (req.user.role === 'thu_ngan' && req.user.branch_name) {
      query.branch = req.user.branch_name;
    }

    const skip = (Number(page) - 1) * Number(limit);
    const items = await ActivityLog.find(query)
      .sort({ createdAt: -1 })
      .skip(skip)
      .limit(Number(limit));
    const total = await ActivityLog.countDocuments(query);

    const detailed = items.map(i => {
      const item = i.toObject();
      console.log('üîç Raw item:', { module: item.module, action: item.action, payload: item.payload_snapshot });
      
      // S·ª≠ d·ª•ng m√¥ t·∫£ ƒë√£ l∆∞u ho·∫∑c t·∫°o m·ªõi n·∫øu ch∆∞a c√≥
      let description = item.description;
      if (!description) {
        try {
          description = createDetailedDescription(item);
          console.log('üîç Generated new description:', description);
          
          // C·∫≠p nh·∫≠t m√¥ t·∫£ v√†o database (async, kh√¥ng c·∫ßn ch·ªù)
          ActivityLog.findByIdAndUpdate(item._id, { description }).catch(e => {});
        } catch (error) {
          console.error('üîç Error creating description:', error);
          description = `Nh√¢n vi√™n ${item.username || 'H·ªá th·ªëng'} (${item.role || 'User'}) ${item.action || 'thao t√°c'} ${item.module || 'm·ª•c'}`;
        }
      } else {
        console.log('üîç Using saved description:', description);
      }
      
      return {
        ...item,
        description: description
      };
    });
    
    console.log('üîç Final response:', { itemsCount: detailed.length, firstItem: detailed[0] });
    res.json({ items: detailed, total, page: Number(page), limit: Number(limit) });
  } catch (err) {
    res.status(500).json({ message: 'L·ªói khi l·∫•y activity logs', error: err.message });
  }
});

export default router;


