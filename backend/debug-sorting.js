const mongoose = require('mongoose');
const ExportHistory = require('./models/ExportHistory');

const LOCAL_URI = 'mongodb://vphone_admin:vphone_secure_2024@103.109.187.224:27017/vphone?authSource=admin';

async function debugSorting() {
  try {
    console.log('üîç Debug s·∫Øp x·∫øp d·ªØ li·ªáu xu·∫•t h√†ng...\n');
    
    await mongoose.connect(LOCAL_URI);
    console.log('‚úÖ ƒê√£ k·∫øt n·ªëi database');
    
    // L·∫•y 10 b·∫£n ghi m·ªõi nh·∫•t t·ª´ ExportHistory
    const recentExports = await ExportHistory.find({})
      .sort({ 
        createdAt: -1,     // ∆Øu ti√™n theo th·ªùi gian t·∫°o (m·ªõi nh·∫•t tr∆∞·ªõc)
        sold_date: -1,     // Sau ƒë√≥ theo ng√†y b√°n
        updatedAt: -1,     // Cu·ªëi c√πng theo th·ªùi gian c·∫≠p nh·∫≠t
        _id: -1            // ƒê·∫£m b·∫£o s·∫Øp x·∫øp ·ªïn ƒë·ªãnh
      })
      .limit(10);
    
    console.log('üìã 10 b·∫£n ghi m·ªõi nh·∫•t t·ª´ ExportHistory:');
    recentExports.forEach((item, index) => {
      console.log(`   ${index + 1}. ${item.product_name || 'N/A'}`);
      console.log(`      - IMEI: ${item.imei || 'N/A'}`);
      console.log(`      - Gi√° b√°n: ${item.price_sell || item.giaBan || 'N/A'}`);
      console.log(`      - Ng√†y b√°n: ${item.sold_date?.toISOString().slice(0, 10) || 'N/A'}`);
      console.log(`      - Th·ªùi gian t·∫°o: ${item.createdAt?.toISOString() || 'N/A'}`);
      console.log(`      - Th·ªùi gian c·∫≠p nh·∫≠t: ${item.updatedAt?.toISOString() || 'N/A'}`);
      console.log(`      - ID: ${item._id}`);
      console.log('');
    });
    
    // Ki·ªÉm tra b·∫£n ghi m·ªõi nh·∫•t
    const latestRecord = await ExportHistory.findOne().sort({ createdAt: -1 });
    console.log('üîç B·∫¢N GHI M·ªöI NH·∫§T:');
    console.log(`   - T√™n: ${latestRecord?.product_name || 'N/A'}`);
    console.log(`   - IMEI: ${latestRecord?.imei || 'N/A'}`);
    console.log(`   - Th·ªùi gian t·∫°o: ${latestRecord?.createdAt?.toISOString() || 'N/A'}`);
    console.log(`   - ID: ${latestRecord?._id || 'N/A'}`);
    
    // Ki·ªÉm tra xem c√≥ b·∫£n ghi n√†o c√≥ createdAt null kh√¥ng
    const nullCreatedAt = await ExportHistory.countDocuments({ createdAt: null });
    console.log(`\n‚ö†Ô∏è  B·∫£n ghi c√≥ createdAt null: ${nullCreatedAt}`);
    
    if (nullCreatedAt > 0) {
      console.log('üîç C√°c b·∫£n ghi c√≥ createdAt null:');
      const nullRecords = await ExportHistory.find({ createdAt: null }).limit(5);
      nullRecords.forEach((item, index) => {
        console.log(`   ${index + 1}. ${item.product_name || 'N/A'} - ID: ${item._id}`);
      });
    }
    
    await mongoose.disconnect();
    console.log('\n‚úÖ Ho√†n t·∫•t debug s·∫Øp x·∫øp!');
    
  } catch (error) {
    console.error('‚ùå L·ªói debug s·∫Øp x·∫øp:', error);
  } finally {
    process.exit(0);
  }
}

if (require.main === module) {
  debugSorting();
}

module.exports = { debugSorting }; 