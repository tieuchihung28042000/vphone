#!/bin/bash

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}================================${NC}"
}

print_header "üîß S·ª¨A T·∫§T C·∫¢ C√ÅC L·ªñI VPHONE"

# B∆∞·ªõc 1: S·ª≠a MongoDB socket issue
print_header "1. S·ª¨A MONGODB SOCKET ISSUE"
print_status "X√≥a socket file b·ªã l·ªói..."
sudo rm -f /tmp/mongodb-27017.sock

print_status "S·ª≠a quy·ªÅn th∆∞ m·ª•c tmp..."
sudo chown mongodb:mongodb /tmp 2>/dev/null || true

print_status "Restart MongoDB..."
sudo systemctl stop mongod
sleep 2
sudo systemctl start mongod
sleep 3

print_status "Ki·ªÉm tra MongoDB status..."
if sudo systemctl is-active --quiet mongod; then
    print_status "‚úÖ MongoDB ƒëang ch·∫°y"
else
    print_warning "‚ö†Ô∏è MongoDB ch∆∞a ch·∫°y, th·ª≠ l·∫°i..."
    sudo systemctl restart mongod
    sleep 5
fi

# B∆∞·ªõc 2: S·ª≠a Nginx config
print_header "2. S·ª¨A NGINX CONFIG"
print_status "X√≥a config c≈©..."
sudo rm -f /etc/nginx/sites-enabled/default
sudo rm -f /etc/nginx/sites-enabled/vphone

print_status "Li√™n k·∫øt config m·ªõi..."
sudo ln -sf /etc/nginx/sites-available/vphone-prod /etc/nginx/sites-enabled/

print_status "Test nginx config..."
if sudo nginx -t; then
    print_status "‚úÖ Nginx config OK"
    sudo systemctl restart nginx
else
    print_error "‚ùå Nginx config c√≥ l·ªói"
fi

# B∆∞·ªõc 3: S·ª≠a CORS trong backend
print_header "3. S·ª¨A CORS BACKEND"
cd backend

print_status "Backup server.js..."
cp server.js server.js.backup

print_status "C·∫≠p nh·∫≠t CORS origins..."
# S·ª≠a CORS ƒë·ªÉ ch·∫•p nh·∫≠n app.vphone.vn
sed -i "s|'http://localhost:8080'|'http://localhost:8080',\n    'http://app.vphone.vn',\n    'https://app.vphone.vn'|g" server.js

print_status "‚úÖ CORS ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t"

# B∆∞·ªõc 4: Restart PM2
print_header "4. RESTART PM2 BACKEND"
cd ..
print_status "Restart PM2 backend..."
pm2 restart vphone-backend

sleep 3

# B∆∞·ªõc 5: Test t·∫•t c·∫£
print_header "5. KI·ªÇM TRA K·∫æT QU·∫¢"

print_status "Test MongoDB connection..."
if mongosh --eval "db.runCommand('ping')" "mongodb://vphone_admin:vphone_secure_2024@localhost:27017/vphone?authSource=admin" > /dev/null 2>&1; then
    print_status "‚úÖ MongoDB k·∫øt n·ªëi OK"
else
    print_warning "‚ö†Ô∏è MongoDB ch∆∞a k·∫øt n·ªëi ƒë∆∞·ª£c"
fi

print_status "Test backend health..."
if curl -s http://localhost:4000/health > /dev/null; then
    print_status "‚úÖ Backend health OK"
    curl -s http://localhost:4000/health | head -1
else
    print_warning "‚ö†Ô∏è Backend ch∆∞a ph·∫£n h·ªìi"
fi

print_status "Test nginx proxy..."
if curl -s http://localhost/api/health > /dev/null; then
    print_status "‚úÖ Nginx proxy OK"
else
    print_warning "‚ö†Ô∏è Nginx proxy ch∆∞a ho·∫°t ƒë·ªông"
fi

print_status "Test frontend..."
if curl -s -I http://localhost/ | grep -q "200 OK"; then
    print_status "‚úÖ Frontend OK"
else
    print_warning "‚ö†Ô∏è Frontend c√≥ v·∫•n ƒë·ªÅ"
fi

# Hi·ªÉn th·ªã status cu·ªëi c√πng
print_header "6. TR·∫†NG TH√ÅI CU·ªêI C√ôNG"
print_status "PM2 processes:"
pm2 list

print_status "MongoDB status:"
sudo systemctl status mongod --no-pager -l | head -3

print_status "Nginx status:"
sudo systemctl status nginx --no-pager -l | head -3

print_header "üéâ HO√ÄN TH√ÄNH!"
echo -e "${GREEN}Truy c·∫≠p ·ª©ng d·ª•ng t·∫°i: ${BLUE}http://app.vphone.vn${NC}"
echo -e "${GREEN}API endpoint: ${BLUE}http://app.vphone.vn/api${NC}"
echo -e "${GREEN}Login: ${BLUE}vphone24h1@gmail.com / 0985630451vU${NC}" 