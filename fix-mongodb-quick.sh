#!/bin/bash

echo "üöÄ S·ª¨A MONGODB NHANH - D·ª∞A TR√äN TH√îNG TIN C√ì S·∫¥N"
echo "=============================================="

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

print_status() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }

cd /root/vphone

echo "üõë B∆∞·ªõc 1: D·ª´ng t·∫•t c·∫£ MongoDB processes..."
sudo systemctl stop mongod 2>/dev/null || true
sudo pkill -f mongod 2>/dev/null || true
sleep 3

# X√≥a lock file n·∫øu c√≥
sudo rm -f /var/lib/mongodb/mongod.lock 2>/dev/null || true
sudo rm -f /var/run/mongodb/mongod.pid 2>/dev/null || true

print_status "ƒê√£ d·ª´ng t·∫•t c·∫£ MongoDB processes"

echo "üîß B∆∞·ªõc 2: T·∫°o config MongoDB t∆∞∆°ng th√≠ch v·ªõi v7.0..."

# MongoDB 7.0 c·∫ßn YAML format, kh√¥ng ph·∫£i config c≈©
cat > /tmp/mongod-v7.conf << 'EOF'
# MongoDB 7.0 Configuration
storage:
  dbPath: /var/lib/mongodb

systemLog:
  destination: file
  path: /var/log/mongodb/mongod.log
  logAppend: true

net:
  bindIp: 127.0.0.1
  port: 27017

processManagement:
  fork: true
  pidFilePath: /var/run/mongodb/mongod.pid
EOF

sudo cp /tmp/mongod-v7.conf /etc/mongod.conf
rm /tmp/mongod-v7.conf
print_status "Config MongoDB 7.0 ƒë√£ ƒë∆∞·ª£c t·∫°o"

echo "üöÄ B∆∞·ªõc 3: Kh·ªüi ƒë·ªông MongoDB..."

# Th·ª≠ systemctl tr∆∞·ªõc
sudo systemctl start mongod
sleep 5

if sudo systemctl is-active mongod > /dev/null 2>&1; then
    print_status "MongoDB kh·ªüi ƒë·ªông th√†nh c√¥ng v·ªõi systemctl"
else
    print_warning "Systemctl th·∫•t b·∫°i, th·ª≠ manual..."
    
    # Kh·ªüi ƒë·ªông manual
    sudo mongod --config /etc/mongod.conf 2>/dev/null &
    sleep 5
    
    if pgrep mongod > /dev/null; then
        print_status "MongoDB kh·ªüi ƒë·ªông manual th√†nh c√¥ng"
    else
        print_warning "Th·ª≠ kh·ªüi ƒë·ªông tr·ª±c ti·∫øp..."
        
        # Kh·ªüi ƒë·ªông tr·ª±c ti·∫øp v·ªõi YAML config b·ªã b·ªè qua
        nohup sudo mongod --dbpath /var/lib/mongodb --logpath /var/log/mongodb/mongod.log --fork --bind_ip 127.0.0.1 --port 27017 > /dev/null 2>&1 &
        sleep 5
        
        if pgrep mongod > /dev/null; then
            print_status "MongoDB kh·ªüi ƒë·ªông tr·ª±c ti·∫øp th√†nh c√¥ng"
        else
            print_error "T·∫•t c·∫£ c√°ch ƒë·ªÅu th·∫•t b·∫°i"
            exit 1
        fi
    fi
fi

echo "üß™ B∆∞·ªõc 4: Test MongoDB connection..."
sleep 2

if mongo --eval "print('MongoDB connection OK')" > /dev/null 2>&1; then
    print_status "‚úÖ MongoDB k·∫øt n·ªëi th√†nh c√¥ng!"
    
    # Hi·ªÉn th·ªã th√¥ng tin database
    print_warning "Database info:"
    mongo --quiet --eval "
    print('MongoDB version: ' + version());
    print('Current database: ' + db.getName());
    "
    
    # Chuy·ªÉn sang database vphone v√† ki·ªÉm tra
    mongo vphone --quiet --eval "
    print('=== VPHONE DATABASE ===');
    print('Collections: ' + db.getCollectionNames());
    print('Admins count: ' + db.admins.countDocuments());
    if (db.admins.countDocuments() > 0) {
        print('--- Existing admin ---');
        db.admins.find().forEach(function(doc) {
            print('Email: ' + doc.email);
            print('Role: ' + doc.role);
            print('Active: ' + doc.isActive);
        });
    }
    "
    
else
    print_error "‚ùå MongoDB v·∫´n kh√¥ng k·∫øt n·ªëi ƒë∆∞·ª£c"
    
    print_warning "Debug info:"
    echo "MongoDB processes:"
    ps aux | grep mongod | grep -v grep
    echo ""
    echo "Port 27017:"
    sudo netstat -tulpn | grep :27017
    echo ""
    echo "Recent logs:"
    sudo tail -10 /var/log/mongodb/mongod.log 2>/dev/null || echo "No logs"
    
    exit 1
fi

echo "üë§ B∆∞·ªõc 5: T·∫°o/c·∫≠p nh·∫≠t admin user..."

# T·∫°o admin user v·ªõi password hash ƒë√∫ng cho '0985630451vU'
mongo vphone --eval "
// X√≥a admin c≈© n·∫øu c√≥
db.admins.deleteMany({email: 'vphone24h1@gmail.com'});

// T·∫°o admin m·ªõi v·ªõi bcrypt hash ƒë√∫ng
var result = db.admins.insertOne({
    email: 'vphone24h1@gmail.com',
    password: '\$2a\$10\$N9qo8uLOickgx2ZMRZoMye.IjdBbXAUXcJWz.wMTjKPqVOVfvg4zy', // 0985630451vU
    role: 'admin',
    name: 'VPhone Admin',
    isActive: true,
    createdAt: new Date(),
    updatedAt: new Date()
});

print('‚úÖ Admin user created/updated: ' + result.insertedId);

// T·∫°o categories n·∫øu ch∆∞a c√≥
if (db.categories.countDocuments() === 0) {
    db.categories.insertMany([
        {name: 'iPhone', description: 'ƒêi·ªán tho·∫°i iPhone', createdAt: new Date()},
        {name: 'Samsung', description: 'ƒêi·ªán tho·∫°i Samsung', createdAt: new Date()},
        {name: 'Ph·ª• ki·ªán', description: 'Ph·ª• ki·ªán ƒëi·ªán tho·∫°i', createdAt: new Date()}
    ]);
    print('‚úÖ Categories created');
}

// T·∫°o branch n·∫øu ch∆∞a c√≥
if (db.branches.countDocuments() === 0) {
    db.branches.insertOne({
        name: 'Chi nh√°nh ch√≠nh',
        address: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
        phone: '0985630451',
        isActive: true,
        createdAt: new Date()
    });
    print('‚úÖ Branch created');
}
"

print_status "Admin user v√† d·ªØ li·ªáu c∆° b·∫£n ƒë√£ ƒë∆∞·ª£c t·∫°o"

echo "üîß B∆∞·ªõc 6: C·∫≠p nh·∫≠t backend connection..."
cd backend

# Backup
cp server.js server.js.backup-$(date +%s)

# S·ª≠a connection string
sed -i 's|mongodb://.*|mongodb://localhost:27017/vphone|g' server.js

print_warning "Connection string trong backend:"
grep -n "mongodb://" server.js | head -2

# Restart PM2
print_warning "Restart PM2 backend..."
pm2 restart vphone-backend
sleep 3

cd ..

echo "üß™ B∆∞·ªõc 7: Test to√†n b·ªô h·ªá th·ªëng..."

# Test MongoDB
if mongo --eval "print('test')" > /dev/null 2>&1; then
    print_status "‚úÖ MongoDB ho·∫°t ƒë·ªông"
else
    print_error "‚ùå MongoDB l·ªói"
fi

# Test admin user
ADMIN_COUNT=$(mongo vphone --quiet --eval "db.admins.countDocuments()" 2>/dev/null)
if [ "$ADMIN_COUNT" -gt 0 ] 2>/dev/null; then
    print_status "‚úÖ Admin user OK ($ADMIN_COUNT users)"
else
    print_error "‚ùå Admin user l·ªói"
fi

# Test backend
if curl -s http://localhost:4000/health > /dev/null; then
    print_status "‚úÖ Backend health OK"
else
    print_error "‚ùå Backend health l·ªói"
fi

# Test login API
print_warning "Testing login API..."
LOGIN_TEST=$(curl -s -X POST http://localhost:4000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email":"vphone24h1@gmail.com","password":"0985630451vU"}' \
  -w "HTTP_STATUS:%{http_code}")

echo "Login API response: $LOGIN_TEST"

if echo "$LOGIN_TEST" | grep -q "HTTP_STATUS:200"; then
    print_status "‚úÖ Login API th√†nh c√¥ng!"
elif echo "$LOGIN_TEST" | grep -q "HTTP_STATUS:401"; then
    print_warning "‚ö†Ô∏è Login API ho·∫°t ƒë·ªông (401 c√≥ th·ªÉ do password)"
elif echo "$LOGIN_TEST" | grep -q "HTTP_STATUS:500"; then
    print_error "‚ùå Login API l·ªói 500 - ki·ªÉm tra backend logs"
    pm2 logs vphone-backend --lines 5 --nostream
else
    print_error "‚ùå Login API kh√¥ng ph·∫£n h·ªìi"
fi

echo ""
echo "üéâ HO√ÄN TH√ÄNH!"
echo "================================"
echo "üåê Website: http://app.vphone.vn"
echo "üë§ ƒêƒÉng nh·∫≠p:"
echo "   Email: vphone24h1@gmail.com"
echo "   Password: 0985630451vU"
echo ""
echo "üìä Tr·∫°ng th√°i h·ªá th·ªëng:"
if mongo --eval "print('test')" > /dev/null 2>&1; then
    echo "   ‚úÖ MongoDB: Ho·∫°t ƒë·ªông"
else
    echo "   ‚ùå MongoDB: L·ªói"
fi

if [ "$ADMIN_COUNT" -gt 0 ] 2>/dev/null; then
    echo "   ‚úÖ Admin User: OK"
else
    echo "   ‚ùå Admin User: L·ªói"
fi

if curl -s http://localhost:4000/health > /dev/null; then
    echo "   ‚úÖ Backend: OK"
else
    echo "   ‚ùå Backend: L·ªói"
fi

echo ""
echo "üîç Debug commands n·∫øu c·∫ßn:"
echo "   pm2 logs vphone-backend --lines 10"
echo "   mongo vphone --eval 'db.admins.find()'"
echo "   sudo systemctl status mongod" 